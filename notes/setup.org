* Anaconda setup
** Request a build node
#+BEGIN_SRC bash
srun -p build --time=2:00:00 --mem=4G --pty /bin/bash
#+END_SRC
** Install anaconda and packages
#+BEGIN_SRC bash
cd /gscratch/stf/anivan
wget https://repo.anaconda.com/archive/Anaconda3-2020.02-Linux-x86_64.sh
sh ./Anaconda3-2020.02-Linux-x86_64.sh
initialize conda 
bash
conda update -n base -c defaults conda
conda create --name tensorflowenv
conda activate tensorflowenv
conda install tensorflow=1.15.0
conda install pyyaml
#+END_SRC

* Job submission
** Configuration file
In the example below,
- =group=
- =nodes=
- =cores=
- =walltime=
- =mem=
are the paramters that are passed directly to Slurm when allocating
resources.

=jobname= is the name of the job and =outputdir= is where the log
files should be written (relative path is ok, or even preferred).

The =parameters= section contains a set of arbitrary parameter
lists. n-tuples of the cartesian product of these lists serve as
parameters when jobs are submitted. In the example below, 2 unique
3-tuples will be used as job runtime parameters.

#+BEGIN_EXAMPLE
group: spe
nodes: 1
cores: 10
walltime: '3:00:00'
mem: 120G

jobname: 'hgram_l={l}_k={k}_d={d}_{date}'
outputdir: ../hnn_tests
datadir: ../data

parameters:
  # frequencies to be used to make the holograms
  k: [0.0001]
  # maximum frequencies used in fourier transforms
  l: [6, 7]
  # noise distances
  d: [5]

command: |
  source activate tensorflowenv
  python -u main_memory_bug.py {l} {k} {d} --config {config}
#+END_EXAMPLE

** Accessing configuration parameters
In addition to the required Slurm parameters, configuration files can
contain arbitrary settings (e.g., the =datadir= parameter). 

Parameters can be accessed by the code (running on the cluster or
locally) as follows:
#+BEGIN_SRC python
from config import Config
config = Config()

config.get('datadir')
#+END_SRC

** Job submittion
Jobs defined via YAML configuration files can be submitted to the Hyak
cluster via
#+BEGIN_SRC bash
python submit.py --config <config_name>
#+END_SRC

When running Python code which relies on YAML configuration locally
(without Slurm) =--config= parameter should be passed. For example
#+BEGIN_SRC bash
python -u main_memory_bug.py 1 2 3 --config some_config
#+END_SRC


