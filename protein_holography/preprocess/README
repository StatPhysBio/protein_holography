README for preprocessing procedure

The preprocessing pipeline takes in a list of directory of pdb files and ultimately
outputs a split of train, test, and validation neighborhoods as a list of unique ids
of the format (<aa>, <pdb>, <model>, <chain>, <insertion>, <seq id>, <hetero>).

The steps in the preprocessing pipeline are as follows:

  1. pdb_list : The first step of the pipeline is to take a directory of pdb files as
     	      	input and create an hdf5 file with a list of the pdb names as the only
		dataset in that list.
			
		flags : --pdb_dir Directory of pdb files
		      	--filename Name for hdf5 file
			--data_dir Directory to save the hdf5 file
			
  2. metadata : Once the list of pdbs is written, the metadata step parses all relevant
     	      	metadata from the pdbs. The metadata parsed includes
			 
			 - deposition date
			 - release date
			 - structure method (e.g. x-ray diff, solution nmr)
			 - resolution
			 - missing residues flag
			 - num missing residues
		
		flags : --pdb_dir Directory of pdb files
		      	--pdb_list hdf5 file with pdb master list

  3. filter : The pdbs are then filter based on conditions imposed on the metadata.
     	      The list of filtered pdbs will be stored as a dataset within the master
	      list hdf5 file.

     	      flags : --pdb_list hdf5 file with master pdb list
	      	      --image_type Strings of image types allowed
		      --resolution Maximum resolution allowed
  
  4. split : The pdbs that meet the conditions can then be split into disjoint training,
     	     validation, and test sets with ratios specified by the user. The user must 
	     specify the conditions imposed on the pdbs so that the appropriate subset
	     can be split. These sets are stored in subgroups of the filtered pdb group
	     in the master list hdf5 file.

	     flags : --pdb_list master list hdf5 file
	     	     --resolution Max resolution cutoff
		     --image_type Imaging types allowed
		     --train_frac Fraction allotted to training set
		     --val_frac Fraction alloted to validation set
		     --test_frac Fraction allotted to testing set